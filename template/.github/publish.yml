name: Publish npm package
on:
  push:
    branches: main
jobs:
  # 检查版本号
  CheckVersion:
    runs-on: ubuntu-latest
    outputs:
      versionChanged: ${{ steps.versionChanged.outputs.versionChanged }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get package Info
        id: package
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: plugins

      - name: Check version is release
        if: contains(steps.package.outputs.current-version, '-')
        run: |
          echo "Package version is not valid"
          exit 1

      - name: Check version is not published
        id: versionChanged
        run: |
          echo "versionChanged=1" >> $GITHUB_OUTPUT
          if npm view @realsee/dnalogel version | grep ${{ steps.package.outputs.current-version }}; then
            echo "Package version is published"
            echo "versionChanged=false" >> $GITHUB_OUTPUT
          else
            echo "Package version is not published"
            echo "versionChanged=true" >> $GITHUB_OUTPUT
          fi

      - name: Output
        run: |
          echo "version: ${{ steps.package.outputs.current-version }}"
          echo "versionChanged: ${{ steps.versionChanged.outputs.versionChanged }}"

  Publish:
    runs-on: ubuntu-latest
    needs: CheckVersion
    if: needs.CheckVersion.outputs.versionChanged != 'false'
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: npm run build

      - name: Publish package
        working-directory: plugins
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_LHZ }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_LHZ }}
        run: |
          npm publish --ignore-scripts
